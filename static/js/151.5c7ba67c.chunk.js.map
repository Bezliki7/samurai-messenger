{"version":3,"file":"static/js/151.5c7ba67c.chunk.js","mappings":"kLACA,GAAgB,SAAW,2BAA2B,KAAO,uBAAuB,KAAO,wB,SCY3F,EAXgB,SAACA,GACb,OACIC,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAAEC,KAAKH,SAClBF,EAAMM,QAKvB,E,UCMA,EAbe,SAACN,GACZ,OACIC,EAAAA,EAAAA,KAAA,OAAAC,UACIK,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAEI,KAAKN,SAAA,CAAC,KAACD,EAAAA,EAAAA,KAACQ,EAAAA,GAAO,CAACC,GAAI,aAAeV,EAAMW,GAAGT,UAC1DK,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACID,EAAAA,EAAAA,KAAA,OAAKW,IAAKZ,EAAMa,QACfb,EAAMc,UAEL,QAGtB,E,sCCSMC,GAAcC,EAAAA,EAAAA,GAAU,IAWxBC,GAAmBC,EAAAA,EAAAA,GAAU,CAC/BC,KAAM,WADeD,EATL,SAAClB,GACjB,OACIO,EAAAA,EAAAA,MAAA,QAAMa,SAAUpB,EAAMqB,aAAanB,SAAA,EAC/BK,EAAAA,EAAAA,MAAA,OAAAL,SAAA,CAAK,KAACD,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAAUV,KAAM,OAAQW,SAAU,CAACC,EAAAA,EAAUX,KAAe,QACpFR,EAAAA,EAAAA,MAAA,OAAAL,SAAA,CAAM,KAACD,EAAAA,EAAAA,KAAA,UAAAC,SAAS,SAAa,SAGzC,IAMA,EA9BiB,SAACF,GACd,IAAI2B,EAAU3B,EAAM4B,YAAYC,KAAI,SAAAC,GAAE,OAAI7B,EAAAA,EAAAA,KAAC8B,EAAM,CAACpB,GAAImB,EAAGnB,GAAIG,KAAMgB,EAAGhB,KAAMD,MAAOiB,EAAGjB,OAAS,IAC3FmB,EAAchC,EAAMiC,aAAaJ,KAAI,SAAAC,GAAE,OAAI7B,EAAAA,EAAAA,KAACiC,EAAO,CAACvB,GAAImB,EAAGnB,GAAIL,KAAMwB,EAAGxB,MAAQ,IAIpF,OACIC,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAE+B,SAASjC,SAAA,EACvBK,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAEuB,QAAQzB,SAAA,CAAC,IAAEyB,EAAQ,QACrCpB,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAEgC,aAAalC,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,OAAAC,SAAM8B,KACN/B,EAAAA,EAAAA,KAACgB,EAAgB,CAACG,SAPV,SAACiB,GACjBrC,EAAMsC,YAAYD,EAASE,KAAK,SASxC,ECCA,G,QAlB0B,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXb,GAAcc,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYhB,WAAW,IAChEK,GAAeS,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYX,YAAY,IAWxE,OAAQhC,EAAAA,EAAAA,KAACkC,EAAQ,CAACP,YAAaA,EAAaK,aAAcA,EACvCK,YAVD,SAACC,GACf,IAAIM,GAASC,EAAAA,EAAAA,IAAmBP,GAChCC,EAASK,EACb,EAO6CE,cANzB,SAACR,GACjB,IAAIM,GAASG,EAAAA,EAAAA,IAAqBT,GAClCC,EAASK,EACb,GAIJ,E","sources":["webpack://my-app/./src/components/Messages/Messages.module.css?8e7e","components/Messages/Message/Message.jsx","components/Messages/Dialog/Dialog.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Messages\":\"Messages_Messages__tHXxo\",\"item\":\"Messages_item__acmu8\",\"user\":\"Messages_user__dHVdn\"};","import s from './../Messages.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                {props.mess}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import s from './../Messages.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.user}> <NavLink to={\"/Messages/\" + props.id}>\r\n                <div>\r\n                    <img src={props.photo} />\r\n                    {props.name}\r\n                </div>\r\n            </NavLink> </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog","import React from 'react';\r\nimport Message from './Message/Message';\r\nimport s from './Messages.module.css';\r\nimport Dialog from './Dialog/Dialog';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLength } from '../Utils/Validators/Validators';\r\nimport { Textarea } from '../common/FormsControl/FormsControl';\r\n\r\n\r\nconst Messages = (props) => {\r\n    let dialogs = props.dialogsData.map(el => <Dialog id={el.id} name={el.name} photo={el.photo} />);\r\n    let messageItem = props.messagesData.map(el => <Message id={el.id} mess={el.mess} />);\r\n\r\n    const MessageText = (formData) => {\r\n        props.sendMessage(formData.text)}\r\n    return (\r\n        <div className={s.Messages}>\r\n            <div className={s.dialogs}> {dialogs} </div>\r\n            <div className={s.messageItems}>\r\n                <div>{messageItem}</div>\r\n                <ReduxMessageForm onSubmit={MessageText} />\r\n            </div>\r\n        </div>)\r\n}\r\nconst maxLength20 = maxLength(20)\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div> <Field component={Textarea} name={'text'} validate={[required, maxLength20]}/> </div>\r\n            <div > <button >send</button> </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxMessageForm = reduxForm({\r\n    form: 'message'\r\n})(MessageForm)\r\n\r\nexport default Messages","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sendMessageCreator, updateMessageCreator } from '../../Redux/MessageReducer';\r\nimport Messages from './Messages';\r\nimport { WithAuthRedirect } from '../HOC/WithAuth';\r\n\r\nconst MessagesContainer = () => {\r\n    const dispatch = useDispatch()\r\n    const dialogsData = useSelector(state => state.messagePage.dialogsData)\r\n    const messagesData = useSelector(state => state.messagePage.messagesData)\r\n\r\n    let sendMessage = (text) => {\r\n        let action = sendMessageCreator(text)\r\n        dispatch(action)\r\n    };\r\n    let updateMessage = (text) => {\r\n        let action = updateMessageCreator(text)\r\n        dispatch(action)\r\n    }\r\n    // let MessagesWithAuthRedirect = WithAuthRedirect(Messages)\r\n    return (<Messages dialogsData={dialogsData} messagesData={messagesData}\r\n                       sendMessage={sendMessage} updateMessage={updateMessage} />)\r\n}\r\n\r\nexport default MessagesContainer\r\n\r\n"],"names":["props","_jsx","children","className","s","item","mess","_jsxs","user","NavLink","to","id","src","photo","name","maxLength20","maxLength","ReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","dialogs","dialogsData","map","el","Dialog","messageItem","messagesData","Message","Messages","messageItems","formData","sendMessage","text","dispatch","useDispatch","useSelector","state","messagePage","action","sendMessageCreator","updateMessage","updateMessageCreator"],"sourceRoot":""}